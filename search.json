[{"path":"https://ellakaye.github.io/aperol/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 aperol authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ellakaye.github.io/aperol/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ella Kaye. Author, maintainer. Kelly Bodwin. Author. Collin Schwantes. Author.","code":""},{"path":"https://ellakaye.github.io/aperol/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kaye E, Bodwin K, Schwantes C (2024). aperol: Generates Tipsy Drunk Praise. R package version 0.2.0, https://ellakaye.github.io/aperol/, https://github.com/EllaKaye/aperol.","code":"@Manual{,   title = {aperol: Generates Tipsy or Drunk Praise},   author = {Ella Kaye and Kelly Bodwin and Collin Schwantes},   year = {2024},   note = {R package version 0.2.0, https://ellakaye.github.io/aperol/},   url = {https://github.com/EllaKaye/aperol}, }"},{"path":"https://ellakaye.github.io/aperol/index.html","id":"aperol-","dir":"","previous_headings":"","what":"Generates Tipsy or Drunk Praise","title":"Generates Tipsy or Drunk Praise","text":"joke package, based mastodon thread, started Kelly Bodwin Shannon Pileggi, specifically replies Nick Tierney Ella Kaye. aperol gives praise, someone tipsy drunk. Specifically, generates praise using praise package garbles . aperol::tipsy() swaps subset words, aperol::drunk() mixes whole affirmation, repeating words along way. v0.2.0, aperol::spritz() function, wrapper function (default devtools::check()) counts many times call , offers increasingly garbled praise, often given time-frame.","code":""},{"path":"https://ellakaye.github.io/aperol/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generates Tipsy or Drunk Praise","text":"can install development version aperol GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"EllaKaye/aperol\")"},{"path":"https://ellakaye.github.io/aperol/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Generates Tipsy or Drunk Praise","text":"","code":"library(aperol) tipsy() #> [1] \"You are awesome! gladly\" tipsy(2, \"${Exclamation}! ${EXCLAMATION}!-${EXCLAMATION}! This is just ${adjective}!\") #> [1] \"Whee! MMHM!-YEAHYAH! is adorable! just This\" drunk() #> [1] \"frankly are are superb! You\" drunk(2, 2:3) #> [1] \"You truthfully truthfully sterling! are are truthfully\" drunk(2, 2, \"You are ${creating} a ${adverb} ${adjective} ${rpackage}\") #> [1] \"R preparing seriously package badass are a preparing seriously You\""},{"path":"https://ellakaye.github.io/aperol/index.html","id":"the-hex","dir":"","previous_headings":"","what":"The hex","title":"Generates Tipsy or Drunk Praise","text":"hex package (created Kelly Bodwin) good full-sized glory.","code":""},{"path":"https://ellakaye.github.io/aperol/reference/drunk.html","id":null,"dir":"Reference","previous_headings":"","what":"Drunk Praise — drunk","title":"Drunk Praise — drunk","text":"Generates praise praise::praise(), repeats words, permutes .","code":""},{"path":"https://ellakaye.github.io/aperol/reference/drunk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drunk Praise — drunk","text":"","code":"drunk(   repeat_words = 1,   repeat_times = 2,   template = \"You are ${adverb} ${adjective}!\" )"},{"path":"https://ellakaye.github.io/aperol/reference/drunk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drunk Praise — drunk","text":"repeat_words int scalar, number words get repeated repeat_times integer-valued (non-negative) vector. length(repeat_times) repeat_words, gives number times repeated word appears. length 1, repeated word appears number times. Otherwise, throws error (see rep()). template character scalar, template (non-swapped) praise","code":""},{"path":"https://ellakaye.github.io/aperol/reference/drunk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drunk Praise — drunk","text":"","code":"drunk() #> [1] \"unique! are quietly You unique!\" drunk(2, 2:3) #> [1] \"bravely are bravely astounding! astounding! You astounding!\" drunk(2, 2, \"You are ${creating} a ${adverb} ${adjective} ${rpackage}\") #> [1] \"are inventing You elegant software warmly software a a\""},{"path":"https://ellakaye.github.io/aperol/reference/increment_spritz_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Increment the spritz count — increment_spritz_count","title":"Increment the spritz count — increment_spritz_count","text":"Adds row spritz count variable environment","code":""},{"path":"https://ellakaye.github.io/aperol/reference/increment_spritz_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Increment the spritz count — increment_spritz_count","text":"","code":"increment_spritz_count(func)"},{"path":"https://ellakaye.github.io/aperol/reference/increment_spritz_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Increment the spritz count — increment_spritz_count","text":"func Character. Function evaluated","code":""},{"path":"https://ellakaye.github.io/aperol/reference/increment_spritz_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Increment the spritz count — increment_spritz_count","text":"Invisible. Data frame spritz_count","code":""},{"path":"https://ellakaye.github.io/aperol/reference/increment_spritz_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Increment the spritz count — increment_spritz_count","text":"","code":"increment_spritz_count(func = \"1+1\")"},{"path":"https://ellakaye.github.io/aperol/reference/spritz.html","id":null,"dir":"Reference","previous_headings":"","what":"Spritz — spritz","title":"Spritz — spritz","text":"thin wrapper around function (e.g devtools::check()) provides affirmation X calls Y minutes. Praise gets drunker number actual runs exceeds number runs time frame.","code":""},{"path":"https://ellakaye.github.io/aperol/reference/spritz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spritz — spritz","text":"","code":"spritz(   func = \"devtools::check()\",   runs = 3,   minutes = 10,   template = \"You are ${adverb} ${adjective}!\" )"},{"path":"https://ellakaye.github.io/aperol/reference/spritz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spritz — spritz","text":"func Character. function expect run multiple times runs Numeric. Number runs time frame praise minutes Numeric. Number minutes time frame template Character. Praise template","code":""},{"path":"https://ellakaye.github.io/aperol/reference/spritz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spritz — spritz","text":"Returns output func","code":""},{"path":"https://ellakaye.github.io/aperol/reference/spritz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spritz — spritz","text":"","code":"if (FALSE) { # \\dontrun{  # default is to run devtools::check() spritz() # with a different function and praise template spritz(\"devtools::document()\",         template = \"You are ${creating} a ${adverb} ${adjective} ${rpackage}\") # change rate depending on speed of devtools::check() spritz(runs = 4, minutes = 15)  ## custom function sleep_add <- function() {   Sys.sleep(2)   out <- 1 + 1   return(out) }  spritz(func = \"sleep_add()\") } # }"},{"path":"https://ellakaye.github.io/aperol/reference/tipsy.html","id":null,"dir":"Reference","previous_headings":"","what":"Tipsy Praise — tipsy","title":"Tipsy Praise — tipsy","text":"Generates praise praise::praise(), swaps words.","code":""},{"path":"https://ellakaye.github.io/aperol/reference/tipsy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tipsy Praise — tipsy","text":"","code":"tipsy(swaps = 1, template = \"You are ${adverb} ${adjective}!\")"},{"path":"https://ellakaye.github.io/aperol/reference/tipsy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tipsy Praise — tipsy","text":"swaps int scalar, number word swaps make template character scalar, template (non-swapped) praise","code":""},{"path":"https://ellakaye.github.io/aperol/reference/tipsy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tipsy Praise — tipsy","text":"","code":"tipsy() #> [1] \"beautiful! are faithfully You\" tipsy(2, \"You are ${creating} a ${adverb} ${adjective} ${rpackage}\") #> [1] \"You calmly assembling a code hip are\""},{"path":"https://ellakaye.github.io/aperol/news/index.html","id":"aperol-020","dir":"Changelog","previous_headings":"","what":"aperol 0.2.0","title":"aperol 0.2.0","text":"New function spritz() provides (garbled) praise function calls repeated rate. Thanks @collinschwantes (#4)","code":""}]
